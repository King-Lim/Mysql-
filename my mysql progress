First day，First SQL
    
SELECT * FROM sheet1;
SELECT * FROM sheet2;
SELECT * FROM sheet1 WHERE SXJBH='690291013';
SELECT JKBW,FL from	sheet1;	

SELECT * FROM sheet1 WHERE FL='入口' AND XJ='-212';

INSERT INTO sheet1 VALUES ('上海东滩湿地公园','690298888','花博大道/陈海H','出口','正常');
#UPDATE用来更新表中已有的数据
#UPDATE sheet1 SET FL='出口',XJ='-212' WHERE SXJBH='690291013';
SELECT * from sheet1 LIMIT 20;
#插入递增的列
SELECT * FROM sheet1 WHERE SXJBH BETWEEN 690293004 AND 690293010;

SELECT * FROM sheet1;
#INNER JOIN与JION是相通的
#INNER JOIN 关键字在表中存在至少一个匹配时返回行
SELECT * FROM sheet1 JOIN sheet2 ON sheet1.SXJBH=sheet2.JPBH;
#LEFT JOIN关键字从左表返回所有行，即使右表中没有匹配
#如果右表中没有匹配，结果返回null
SELECT * FROM sheet1 LEFT JOIN sheet2 ON sheet1.SXJBH=sheet2.JPBH;
#RIGHT JOIN关键字从右表返回所有行，即使左表中没有匹配
#如果左表中没有匹配，结果返回null
SELECT * FROM sheet1 RIGHT JOIN sheet2 ON sheet1.SXJBH=sheet2.JPBH;
SELECT SXJBH FROM sheet1 UNION ALL SELECT JPBH FROM sheet2;

#SELECT INTO 语句从一个表复制数据，把数据插入到新表中；
SELECT * INTO sheet10701 FROM sheet1;

INSERT INTO sheet2 SELECT * FROM sheet1;

DELETE FROM sheet2 WHERE ID='上海东滩湿地公园';
DROP TABLE persons;

CREATE TABLE Persons
(
PersonID int,
LastName varchar(255),
FirstName varchar(255),
Address varchar(255),
City varchar(255)
);

CREATE TABLE Persons
(
P_Id int NOT NULL,
LastName varchar(255) NOT NULL,
FirstName varchar(255),
Address varchar(255),
City varchar(255),
PRIMARY KEY (P_Id)
);

CREATE TABLE Persons 
(
P_Id int NOT NULL,
LastName varchar(255) NOT NULL,
FirstName varchar(255),
Address varchar(255),
City varchar(255),
CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName)
);


Second Days,Learning about mysql basic knowledge
主键：主键是惟一的，一个数据表中只能有一个主键，可以使用主键来查询数据
    主键不可带有业务属性，应该使用bigint自增或者guid类型；
    主键也不允许null；
主键分类：
    自增主键
    UUID主键
    GUID主键
        【&附注】
        聚簇索引的数据的物理存放顺序与索引顺序是一致的，只要索引是相邻的，那么对应的数据一定也是相邻地存放在磁盘上的。
        主键不是自增长id,会不断的调整数据的物理地址，分页造成较高的性能消耗。
        而自增长id只需要一页页写下去，索引相对紧凑，磁盘碎片少，效率相对较高。 
        mysql默认引擎是Innodb，而Inoodb默认是聚簇索引，因为MyISAM的主索引并非聚簇索引，那么他的数据的物理地址必然是凌乱的，拿到这些物理地址，
        按照合适的算法进行I/O读取，于是开始不停的寻道不停的旋转。
        聚簇索引则只需一次I/O  使用MyISAM，则就更不能用字符型，因为MyISAM默认会对字符型采用压缩引擎，从而导致查询变得非常慢 。
        聚簇索引默认是主键，如果表中没有定义主键，InnoDB 会选择一个唯一的非空索引代替。
        如果没有这样的索引，InnoDB 会隐式定义一个主键来作为聚簇索引。
        InnoDB 只聚集在同一个页面中的记录。包含相邻健值的页面可能相距甚远。  
        整数通常是标识列的最好选择，因为它很快且可以使用AUTO_INCREAMENT,如果可能，应该避免使用字符串类型作为标识列，因为很消耗空间，且通常比数字类型慢。
外键：用于关联两个表
    关系型数据库通过外键来实现一对多、多对多和一对一的关系；
    外键可以通过数据库来约束，也可不设置约束，仅通过应用程序的逻辑来保证；
复合键：将多个列作为一个索引键，多用于复合索引；


Third day,Mysql trainning

SELECT * FROM employees ORDER BY hire_date DESC LIMIT 3,2
#对hire_date降序排序，并选取第四行的后两行

